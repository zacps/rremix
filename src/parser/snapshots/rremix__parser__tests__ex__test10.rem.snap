---
source: src/parser/mod.rs
assertion_line: 72
expression: "format_pair(pair.unwrap(), 0, true)"
---
- program
  - statement > assignment_statement
    - variable: "n"
    - colon: ":"
    - expression > unary_expression > simple_expression > literal > number: "2"
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "showline"
    - literal > list
      - list_item > expression > unary_expression > simple_expression > literal > number: "4"
      - list_item > expression > unary_expression > simple_expression > variable: "n"
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "showline"
    - literal > list
      - list_item > expression > unary_expression > simple_expression > literal > number: "1"
      - list_item > expression > unary_expression > simple_expression > literal > list
        - list_item > expression > unary_expression > simple_expression > literal > number: "2"
        - list_item > expression > unary_expression > simple_expression > variable: "n"
        - list_item > expression > unary_expression > simple_expression > literal > number: "3"
      - list_item > expression > unary_expression > simple_expression > variable: "n"
  - statement > assignment_statement
    - variable: "list1"
    - colon: ":"
    - expression > unary_expression > simple_expression > literal > list
      - list_item > expression > unary_expression > simple_expression > literal > number: "2"
      - list_item > expression > unary_expression > simple_expression > literal > number: "4"
      - list_item > expression > unary_expression > simple_expression > literal > number: "8"
      - list_item > expression > unary_expression > simple_expression > literal > number: "16"
      - list_item > expression > unary_expression > simple_expression > literal > number: "32"
      - list_item > expression > unary_expression > simple_expression > literal > number: "64"
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "showline"
    - expression > unary_expression > simple_expression > variable: "list1"
  - statement > assignment_statement
    - variable: "list2"
    - colon: ":"
    - expression > unary_expression > simple_expression > literal > list
      - list_item > expression > unary_expression > simple_expression > literal > string: "\"abc\""
      - list_item > expression > unary_expression > simple_expression > literal > number: "8"
      - list_item > expression > binary_expression
        - unary_expression > simple_expression > literal > number: "9"
        - operator: "+"
        - expression > unary_expression > simple_expression > literal > number: "5"
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "showline"
    - expression > unary_expression > simple_expression > variable: "list2"
  - statement > assignment_statement
    - variable: "a"
    - colon: ":"
    - expression > unary_expression > simple_expression > literal > string: "\"some value \""
  - statement > assignment_statement
    - variable: "n"
    - colon: ":"
    - expression > unary_expression > simple_expression > literal > number: "5"
  - statement > assignment_statement
    - variable: "list3"
    - colon: ":"
    - expression > unary_expression > simple_expression > literal > list
      - list_item > expression > unary_expression > simple_expression > variable: "a"
      - list_item > expression > unary_expression > simple_expression > function_call
        - single_name_part: "square"
        - expression > unary_expression > simple_expression > variable: "n"
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "showline"
    - expression > unary_expression > simple_expression > variable: "list3"
  - statement > assignment_statement
    - variable: "list4"
    - colon: ":"
    - expression > unary_expression > simple_expression > literal > list
      - list_item > expression > binary_expression
        - unary_expression > simple_expression > function_call
          - single_name_part: "square"
          - expression > unary_expression > simple_expression > variable: "n"
        - operator: "+"
        - expression > unary_expression > simple_expression > function_call
          - single_name_part: "square"
          - literal > number: "4"
      - list_item > expression > unary_expression > simple_expression > literal > string: "\" - abc\""
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "showline"
    - expression > unary_expression > simple_expression > variable: "list4"
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "showline"
    - literal > list
      - list_item > expression > unary_expression > simple_expression > literal > string: "\"The number is \""
      - list_item > expression > unary_expression > simple_expression > variable: "n"
      - list_item > expression > unary_expression > simple_expression > literal > string: "\".\""
  - statement > assignment_statement
    - variable: "a"
    - colon: ":"
    - expression > unary_expression > simple_expression > literal > string: "\" ----- \""
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "showline"
    - literal > list
      - list_item > expression > unary_expression > simple_expression > variable: "a"
      - list_item > expression > unary_expression > simple_expression > literal > number: "4"
      - list_item > expression > unary_expression > simple_expression > literal > string: "\" \""
      - list_item > expression > unary_expression > simple_expression > literal > number: "3"
      - list_item > expression > unary_expression > simple_expression > literal > string: "\" \""
      - list_item > expression > unary_expression > simple_expression > literal > number: "2"
      - list_item > expression > unary_expression > simple_expression > literal > string: "\" \""
      - list_item > expression > unary_expression > simple_expression > literal > number: "1"
      - list_item > expression > unary_expression > simple_expression > variable: "a"
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "showline"
    - literal > list: "{}"
  - statement > assignment_statement
    - variable: "list"
    - colon: ":"
    - expression > unary_expression > simple_expression > literal > list
      - list_item > expression > unary_expression > simple_expression > variable: "a"
      - list_item > expression > unary_expression > simple_expression > literal > string: "\"is this ok?\""
      - list_item > expression > unary_expression > simple_expression > variable: "a"
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "showline"
    - expression > unary_expression > simple_expression > variable: "list"
  - EOI: ""
