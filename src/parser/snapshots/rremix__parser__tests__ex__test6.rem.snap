---
source: src/parser/mod.rs
assertion_line: 72
expression: "format_pair(&pair.unwrap(), 0, true)"
---
- program
  - function_definition
    - function_signature
      - name_paren > name_part > name_list > single_name_part: "repeat"
      - name_paren > name_part > name_list > single_name_part: "until"
      - name_paren > paren > single_name_part: "condition-block"
      - name_paren > paren > single_name_part: "block"
    - colon: ":"
    - function_statements
      - statement > expression > unary_expression > simple_expression > function_call
        - single_name_part: "do"
        - expression > unary_expression > simple_expression > variable: "block"
      - statement > expression > unary_expression > simple_expression > function_call
        - single_name_part: "if"
        - expression > unary_expression > simple_expression > function_call
          - single_name_part: "do"
          - expression > unary_expression > simple_expression > variable: "condition-block"
        - newindent_block > statement > expression > unary_expression > simple_expression > function_call
          - single_name_part: "break"
          - single_name_part: "out"
      - statement > redo_statement > redo: "redo"
  - function_definition
    - function_signature
      - name_paren > name_part > name_list > single_name_part: "line"
      - name_paren > paren > single_name_part: "string"
      - name_paren > paren > single_name_part: "value"
    - colon: ":"
    - function_statements
      - statement > expression > unary_expression > simple_expression > function_call
        - single_name_part: "show"
        - expression > unary_expression > simple_expression > variable: "string"
      - statement > expression > unary_expression > simple_expression > function_call
        - single_name_part: "show"
        - expression > unary_expression > simple_expression > variable: "value"
      - statement > expression > unary_expression > simple_expression > function_call
        - single_name_part: "new"
        - single_name_part: "line"
  - statement > assignment_statement
    - variable: "conditionA"
    - colon: ":"
    - expression > unary_expression > simple_expression > literal > boolean: "false"
  - statement > assignment_statement
    - variable: "conditionB"
    - colon: ":"
    - expression > unary_expression > simple_expression > literal > boolean: "false"
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "line"
    - literal > string: "\"conditionA: \""
    - expression > unary_expression > simple_expression > variable: "conditionA"
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "line"
    - literal > string: "\"conditionB: \""
    - expression > unary_expression > simple_expression > variable: "conditionB"
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "repeat"
    - single_name_part: "until"
    - block > statement > expression > unary_expression > simple_expression > variable: "conditionA"
    - newindent_block
      - statement > expression > unary_expression > simple_expression > function_call
        - single_name_part: "line"
        - literal > string: "\"inside conditionA: \""
        - expression > unary_expression > simple_expression > variable: "conditionA"
      - statement > expression > unary_expression > simple_expression > function_call
        - single_name_part: "line"
        - literal > string: "\"inside conditionB: \""
        - expression > unary_expression > simple_expression > variable: "conditionB"
      - statement > expression > unary_expression > simple_expression > function_call
        - single_name_part: "if"
        - expression > unary_expression > simple_expression > variable: "conditionB"
        - newindent_block > statement > assignment_statement
          - variable: "conditionA"
          - colon: ":"
          - expression > unary_expression > simple_expression > literal > boolean: "true"
      - statement > assignment_statement
        - variable: "conditionB"
        - colon: ":"
        - expression > unary_expression > simple_expression > literal > boolean: "true"
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "line"
    - literal > string: "\"conditionA: \""
    - expression > unary_expression > simple_expression > variable: "conditionA"
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "line"
    - literal > string: "\"conditionB: \""
    - expression > unary_expression > simple_expression > variable: "conditionB"
  - EOI: ""
