---
source: src/parser/mod.rs
assertion_line: 72
expression: "format_pair(&pair.unwrap(), 0, true)"
---
- program
  - statement > assignment_statement
    - variable: "window"
    - colon: ":"
    - expression > unary_expression > simple_expression > literal > list
      - list_item > key_value
        - variable: "x"
        - expression > unary_expression > simple_expression > literal > number: "100"
      - list_item > key_value
        - variable: "y"
        - expression > unary_expression > simple_expression > literal > number: "50"
  - function_definition
    - function_signature
      - name_paren > name_part > name_list > single_name_part: "array"
      - name_paren > paren > single_name_part: "block"
    - colon: ":"
    - function_statements
      - new_indent: "\t"
      - statement > expression > unary_expression > simple_expression > literal > number: "999"
  - function_definition
    - function_signature
      - name_paren > name_part > name_list > single_name_part: "print"
      - name_paren > paren > single_name_part: "array"
    - colon: ":"
    - function_statements
      - new_indent: "\t"
      - statement > assignment_statement
        - variable: "a"
        - colon: ":"
        - expression > binary_expression
          - unary_expression > simple_expression > function_call
            - single_name_part: "array"
            - expression > unary_expression > simple_expression > literal > number: "2"
          - operator: "+"
          - expression > unary_expression > simple_expression > literal > number: "1"
      - statement > expression > unary_expression > simple_expression > function_call
        - single_name_part: "showline"
        - expression > unary_expression > simple_expression > variable: "a"
      - statement > assignment_statement
        - variable: "a"
        - colon: ":"
        - expression > unary_expression > simple_expression > list_element
          - single_name_part: "array"
          - expression > unary_expression > simple_expression > literal > number: "2"
      - statement > expression > unary_expression > simple_expression > function_call
        - single_name_part: "showline"
        - expression > unary_expression > simple_expression > variable: "a"
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "print"
    - expression > unary_expression > simple_expression > variable: "window"
  - function_definition
    - function_signature
      - name_paren > name_part > name_list > single_name_part: "catch"
      - name_paren > paren > single_name_part: "blocker"
    - colon: ":"
    - function_statements
      - new_indent: "\t"
      - statement > expression > unary_expression > simple_expression > function_call
        - single_name_part: "do"
        - expression > unary_expression > simple_expression > variable: "blocker"
      - statement > expression > unary_expression > simple_expression > function_call
        - single_name_part: "showline"
        - literal > string: "\"done block\""
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "showline"
    - literal > string: "\"Aargh1!!\""
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "catch"
    - newindent_block
      - new_indent: "\t"
      - statement > expression > unary_expression > simple_expression > function_call
        - single_name_part: "showline"
        - literal > string: "\"Aargh2!!\""
  - statement > assignment_statement
    - variable: "x"
    - colon: ":"
    - expression > unary_expression > simple_expression > literal > number: "61"
  - statement > expression > unary_expression > simple_expression > function_call
    - single_name_part: "catch"
    - expression > unary_expression > simple_expression > block > statement > expression > unary_expression > simple_expression > function_call
      - single_name_part: "showline"
      - literal > list
        - list_item > expression > unary_expression > simple_expression > literal > string: "\"Aargh3!! \""
        - list_item > expression > unary_expression > simple_expression > variable: "x"
  - EOI: ""
